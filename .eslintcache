[{"D:\\project\\web\\sudoku-creator\\src\\Components\\App\\App.js":"1","D:\\project\\web\\sudoku-creator\\src\\Components\\Case\\Case.js":"2","D:\\project\\web\\sudoku-creator\\src\\Components\\Button\\Button.js":"3","D:\\project\\web\\sudoku-creator\\src\\utils\\utils.js":"4","D:\\project\\web\\sudoku-creator\\src\\index.js":"5","D:\\project\\web\\sudoku-creator\\src\\Components\\Line\\Line.js":"6","D:\\project\\web\\sudoku-creator\\src\\Components\\Board\\Board.js":"7","D:\\project\\web\\sudoku-creator\\src\\reportWebVitals.js":"8"},{"size":4758,"mtime":1611074426580,"results":"9","hashOfConfig":"10"},{"size":1003,"mtime":1610733431029,"results":"11","hashOfConfig":"10"},{"size":1283,"mtime":1611074033500,"results":"12","hashOfConfig":"10"},{"size":4397,"mtime":1610803008884,"results":"13","hashOfConfig":"10"},{"size":515,"mtime":1610996918810,"results":"14","hashOfConfig":"10"},{"size":534,"mtime":1610802560835,"results":"15","hashOfConfig":"10"},{"size":542,"mtime":1610400527996,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1607183255522,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"csg7jr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\project\\web\\sudoku-creator\\src\\Components\\App\\App.js",["36"],"import React from 'react';\r\nimport Board from '../Board/Board';\r\nimport Button from '../Button/Button'\r\nimport './App.css'\r\nimport Utils from '../../utils/utils'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            taille: 9,\r\n            board:  [\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n            ],\r\n            difficulty: 50,\r\n            solution:[\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n            ],\r\n            showSolution: false\r\n        }\r\n        \r\n        this.changeCase = this.changeCase.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.create = this.create.bind(this);\r\n        this.changeDifficulty = this.changeDifficulty.bind(this);\r\n        this.showSolution = this.showSolution.bind(this);\r\n    }\r\n\r\n    changeCase(lineIndex, caseIndex, value) {\r\n        const boardCopy = this.state.board;\r\n        boardCopy[lineIndex][caseIndex] = parseInt(value);\r\n        this.setState(\r\n            {\r\n                board: boardCopy\r\n            }\r\n        )\r\n    }\r\n\r\n    reset() {\r\n        this.setState(\r\n            {\r\n                board: [\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                ],\r\n                solution: [\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                    [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n                ],\r\n                showSolution: false,\r\n                randomBoard: false\r\n            }\r\n        )\r\n    }\r\n\r\n    async create() {\r\n        let sol = Utils.randomGrid([\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            ])\r\n        console.log(sol)\r\n        let solution = JSON.parse(JSON.stringify(sol));\r\n        let grid = Utils.delete_cases(sol, this.state.difficulty)\r\n\r\n        this.setState({\r\n            board: grid,\r\n            solution: solution,\r\n            showSolution: false,\r\n            randomBoard: true\r\n        });\r\n    }\r\n\r\n    changeDifficulty(newDif) {\r\n        this.setState({\r\n            difficulty: newDif\r\n        })\r\n    }\r\n\r\n    showSolution() {\r\n        if (this.state.randomBoard) {\r\n            this.setState({\r\n                showSolution: true\r\n            })            \r\n        }\r\n    }\r\n\r\n    useless() {\r\n        return\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='wrapper'>\r\n                <h1 id='title'>Sudoku</h1>\r\n                <Board \r\n                    taille={this.state.taille} \r\n                    onChangeCase={this.changeCase}\r\n                    boardData={this.state.board}\r\n                />\r\n                {this.state.showSolution == true ? <Board boardData={this.state.solution} onChangeCase={this.useless} taille={this.state.taille} /> : ''}\r\n                <Button onreset={this.reset} oncreate={this.create} difficulte={this.state.difficulty} changeDificulte={this.changeDifficulty} onshowSolution={this.showSolution} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","D:\\project\\web\\sudoku-creator\\src\\Components\\Case\\Case.js",[],"D:\\project\\web\\sudoku-creator\\src\\Components\\Button\\Button.js",["37","38"],"D:\\project\\web\\sudoku-creator\\src\\utils\\utils.js",[],"D:\\project\\web\\sudoku-creator\\src\\index.js",[],["39","40"],"D:\\project\\web\\sudoku-creator\\src\\Components\\Line\\Line.js",[],"D:\\project\\web\\sudoku-creator\\src\\Components\\Board\\Board.js",[],"D:\\project\\web\\sudoku-creator\\src\\reportWebVitals.js",[],{"ruleId":"41","severity":1,"message":"42","line":137,"column":42,"nodeType":"43","messageId":"44","endLine":137,"endColumn":44},{"ruleId":"41","severity":1,"message":"42","line":11,"column":48,"nodeType":"43","messageId":"44","endLine":11,"endColumn":50},{"ruleId":"41","severity":1,"message":"42","line":11,"column":75,"nodeType":"43","messageId":"44","endLine":11,"endColumn":77},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-global-assign","no-unsafe-negation"]